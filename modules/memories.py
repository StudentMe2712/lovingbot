class MemoryModule:
    def __init__(self, db):
        self.db = db

    async def add_memory(self, update, context):
        if context.args:
            text = " ".join(context.args)
            self.db.add_memory(type="text", content=text)
            await update.message.reply_text("–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è.")

    async def add_photo_memory(self, update, context):
        if update.message.photo:
            file_id = update.message.photo[-1].file_id
            caption = update.message.caption or "–§–æ—Ç–æ-–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ"
            self.db.add_memory(type="photo", content="", file_id=file_id, description=caption)
            await update.message.reply_text("–§–æ—Ç–æ-–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∞—Ä—Ö–∏–≤ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π.")

    async def add_video_memory(self, update, context):
        if update.message.video:
            file_id = update.message.video.file_id
            caption = update.message.caption or "–í–∏–¥–µ–æ-–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ"
            self.db.add_memory(type="video", content="", file_id=file_id, description=caption)
            await update.message.reply_text("–í–∏–¥–µ–æ-–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∞—Ä—Ö–∏–≤ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π.")

    async def add_voice_memory(self, update, context):
        if update.message.voice:
            file_id = update.message.voice.file_id
            self.db.add_memory(type="voice", content="", file_id=file_id, description="–ì–æ–ª–æ—Å–æ–≤–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ")
            await update.message.reply_text("–ì–æ–ª–æ—Å–æ–≤–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∞—Ä—Ö–∏–≤ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π.")

    async def send_random_memory(self, update, context):
        memory = self.db.get_random_memory()
        if memory:
            _, date, type_, content, file_id, description = memory
            if type_ == "photo" and file_id:
                await update.message.reply_photo(photo=file_id, caption=f"üì∏ {description or '–§–æ—Ç–æ-–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ'}\n({date})")
            elif type_ == "voice" and file_id:
                await update.message.reply_voice(voice=file_id, caption=f"üé§ {description or '–ì–æ–ª–æ—Å–æ–≤–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ'}\n({date})")
            else:
                text = f"üì∏ –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç {date}: {description or content}"
                await update.message.reply_text(text)
        else:
            await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ—Ç –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–µ!") 