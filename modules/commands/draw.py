from telegram import Update
from telegram.ext import ContextTypes
from utils.sd_pipeline import generate_image_local, generate_image_sd3_local, DEVICE
from io import BytesIO
import asyncio

async def draw_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    args = context.args
    prompt = ' '.join(arg for arg in args if arg.lower() not in ('sd3', '3'))
    use_sd3 = any(arg.lower() in ('sd3', '3') for arg in args)
    if not prompt:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ—Å–ª–µ /draw [sd3|3] <–ø—Ä–æ–º–ø—Ç>.")
        return
    if use_sd3:
        await update.message.reply_text(f"–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SD3 –ø–æ –∑–∞–ø—Ä–æ—Å—É: {prompt}\n(–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 2-3 –º–∏–Ω—É—Ç –∏ —Ç—Ä–µ–±—É–µ—Ç –º–Ω–æ–≥–æ VRAM)")
        loop = asyncio.get_event_loop()
        image = await loop.run_in_executor(None, generate_image_sd3_local, prompt)
    else:
        await update.message.reply_text(f"–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SD1.5 –ø–æ –∑–∞–ø—Ä–æ—Å—É: {prompt}\n(–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 1 –º–∏–Ω—É—Ç—ã)")
        loop = asyncio.get_event_loop()
        image = await loop.run_in_executor(None, generate_image_local, prompt)
    if image is None:
        await update.message.reply_text("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø—Ä–æ–º–ø—Ç/–º–æ–¥–µ–ª—å.")
        return
    buffer = BytesIO()
    image.save(buffer, format='PNG')
    buffer.seek(0)
    await update.message.reply_photo(photo=buffer, caption=f"üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {prompt}")
    if DEVICE == "cpu":
        await update.message.reply_text("–í–Ω–∏–º–∞–Ω–∏–µ: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞ CPU –æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–∞—è. –î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ GPU.") 