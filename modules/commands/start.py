from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ConversationHandler, CommandHandler, MessageHandler, filters
from utils.user_management import Data, UserStatus
from config import PERSONALIZATION
from utils.logger import setup_logger
from utils.db_async import get_user_by_tg_id, create_user
from database.db_manager import DatabaseManager
from datetime import datetime
from utils.sd_pipeline import generate_postcard
from utils.ollama_mode import get_ollama_mode, get_mode_button_text, set_ollama_mode

logger = setup_logger("start_command")
data_instance = Data()
db = DatabaseManager()

HELP_MESSAGE = (
    "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º–∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
    "–í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–æ–π —Å –ø–æ–º–æ—â—å—é —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥:\n\n"
    "/game - –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ –≤–∞—Å\n"
    "/music - –º—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è\n"
    "/memory - —Å–ª—É—á–∞–π–Ω–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n"
    "/add_memory - –¥–æ–±–∞–≤–∏—Ç—å –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n"
    "/date_idea - –∏–¥–µ—è –¥–ª—è —Å–≤–∏–¥–∞–Ω–∏—è\n"
    "/question - –≤–æ–ø—Ä–æ—Å –¥–Ω—è\n"
    "/mood - –æ—Ü–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ\n"
    "/compliment - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç\n"
    "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä\n"
    "/reminders - —Å–ø–∏—Å–æ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π\n"
    "/reminder_add - –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n"
    "/reminder_remove - —É–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n"
    "/mood_stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è\n"
    "/memory_archive - –∞—Ä—Ö–∏–≤ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π\n"
    "/date_idea_advanced - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–¥–µ—è –¥–ª—è —Å–≤–∏–¥–∞–Ω–∏—è\n"
    "/weather - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É\n"
    "/set_partner - –≤—ã–±—Ä–∞—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–∞ (–≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ Telegram ID)\n"
    "/deezer_music - —Ç–æ–ø-—á–∞—Ä—Ç Deezer\n"
    "/block_partner - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–∞\n"
    "/unblock_partner - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–∞\n"
    "/wishlist - —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π\n"
    "/add_wish - –¥–æ–±–∞–≤–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ\n"
    "/done_wish - –æ—Ç–º–µ—Ç–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ\n"
    "/remove_wish - —É–¥–∞–ª–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ\n"
    "/postcard - —Å–æ–∑–¥–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç–∫—É –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é\n"
    "\n\n"
    "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n"
    "/check_api - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤\n"
    "\n\n"
    "–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ.\n\n"
    "–í –∏–≥—Ä–æ–≤–æ–º –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
    "/game - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
    "/add_question - –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å\n"
    "/my_questions - –º–æ–∏ –≤–æ–ø—Ä–æ—Å—ã\n"
    "/partner_questions - –≤–æ–ø—Ä–æ—Å—ã –ø–∞—Ä—Ç–Ω—ë—Ä–∞\n"
    "/game_stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã\n"
    "Deezer –º—É–∑—ã–∫–∞\n"
)

BOTFATHER_STYLE_MESSAGE = (
    "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º–∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
    "–í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–æ–π —Å –ø–æ–º–æ—â—å—é —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥:\n\n"
    "/game - –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ –≤–∞—Å\n"
    "/music - –º—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è\n"
    "/memory - —Å–ª—É—á–∞–π–Ω–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n"
    "/add_memory - –¥–æ–±–∞–≤–∏—Ç—å –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n"
    "/date_idea - –∏–¥–µ—è –¥–ª—è —Å–≤–∏–¥–∞–Ω–∏—è\n"
    "/question - –≤–æ–ø—Ä–æ—Å –¥–Ω—è\n"
    "/mood - –æ—Ü–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ\n"
    "/compliment - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç\n"
    "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä\n"
    "/reminders - —Å–ø–∏—Å–æ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π\n"
    "/reminder_add - –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n"
    "/reminder_remove - —É–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n"
    "/mood_stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è\n"
    "/memory_archive - –∞—Ä—Ö–∏–≤ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π\n"
    "/date_idea_advanced - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–¥–µ—è –¥–ª—è —Å–≤–∏–¥–∞–Ω–∏—è\n"
    "/weather - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É\n"
    "/deezer_music - —Ç–æ–ø-—á–∞—Ä—Ç Deezer\n"
    "/block_partner - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–∞\n"
    "/unblock_partner - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–∞\n"
    "/wishlist - —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π\n"
    "/add_wish - –¥–æ–±–∞–≤–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ\n"
    "/done_wish - –æ—Ç–º–µ—Ç–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ\n"
    "/remove_wish - —É–¥–∞–ª–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ\n"
    "/postcard - —Å–æ–∑–¥–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç–∫—É –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é\n"
    "\n\n"
    "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n"
    "/check_api - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤\n"
    "\n\n"
    "–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ."
)

ASK_NAME = 1

async def start_command(update: Update, context):
    logger.info(f"start_command: {update.effective_user.id}")
    user = update.effective_user
    user_id = user.id
    db_user = await get_user_by_tg_id(user_id)
    # –ù–æ–≤–æ–µ –ª–∞–∫–æ–Ω–∏—á–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    welcome_text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start.\n\n"
        "–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ / (–≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ Telegram).\n"
        "\n\n*–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∞—Ç—å —Å /start!*"
    )
    await update.message.reply_text(welcome_text, parse_mode="Markdown")
    if not db_user:
        await update.message.reply_text(
            "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –∏–º—è:")
        return ASK_NAME
    # –£–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    await send_welcome(update)
    return ConversationHandler.END

async def ask_name(update: Update, context):
    name = update.message.text.strip()
    user = update.effective_user
    user_id = user.id
    print(f"[ask_name] user_id={user_id}, name={name}")
    logger.info(f"[ask_name] user_id={user_id}, name={name}")
    try:
        print(f"[ask_name] call create_user({user_id}, {name})")
        logger.info(f"[ask_name] call create_user({user_id}, {name})")
        await create_user(user_id, name)
        await update.message.reply_text(f"–°–ø–∞—Å–∏–±–æ, {name}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
        await send_welcome(update)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
    return ConversationHandler.END

async def send_welcome(update: Update, context=None):
    if context:
        mode, _ = get_ollama_mode(context)
    else:
        mode = "general"
    mode_button = [get_mode_button_text(mode)]
    keyboard = [mode_button,
        ["–ò–≥—Ä–∞ üé≤", "–ú—É–∑—ã–∫–∞ üéµ", "–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ üì∏"],
        ["–î–æ–±–∞–≤–∏—Ç—å –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ ‚ûïüì∏", "–ò–¥–µ—è –¥–ª—è —Å–≤–∏–¥–∞–Ω–∏—è üí°", "–í–æ–ø—Ä–æ—Å –¥–Ω—è ‚ùì"],
        ["–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ üòä", "–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç üí¨", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä"],
        ["–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ‚è∞", "–ê—Ä—Ö–∏–≤ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π üóÇÔ∏è", "–†–∞—Å—à–∏—Ä. —Å–≤–∏–¥–∞–Ω–∏–µ üó∫Ô∏è"],
        ["–ü–æ–≥–æ–¥–∞ ‚òÄÔ∏è"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "üåÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –≤–∞—à —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –±–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –î–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ.",
        reply_markup=reply_markup
    )
    await update.message.reply_text(BOTFATHER_STYLE_MESSAGE)

async def cancel_start(update: Update, context):
    await update.message.reply_text(
        "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END

async def block_partner_command(update, context):
    user_id = update.effective_user.id
    if not context.args or not context.args[0].isdigit():
        await update.message.reply_text("–§–æ—Ä–º–∞—Ç: /block_partner <tg_id –ø–∞—Ä—Ç–Ω—ë—Ä–∞>")
        return
    partner_id = int(context.args[0])
    db.block_partner(user_id, partner_id)
    await update.message.reply_text(f"–ü–∞—Ä—Ç–Ω—ë—Ä —Å ID {partner_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")

async def unblock_partner_command(update, context):
    user_id = update.effective_user.id
    if not context.args or not context.args[0].isdigit():
        await update.message.reply_text("–§–æ—Ä–º–∞—Ç: /unblock_partner <tg_id –ø–∞—Ä—Ç–Ω—ë—Ä–∞>")
        return
    partner_id = int(context.args[0])
    db.unblock_partner(user_id, partner_id)
    await update.message.reply_text(f"–ü–∞—Ä—Ç–Ω—ë—Ä —Å ID {partner_id} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")

async def wishlist_command(update, context):
    user_id = update.effective_user.id
    wishes = db.get_wishlist(user_id)
    if not wishes:
        await update.message.reply_text("–í–∞—à —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π –ø—É—Å—Ç.")
        return
    msg = "–í–∞—à wishlist:\n"
    for wid, item, done, created_at in wishes:
        status = "‚úÖ" if done else "‚ùå"
        msg += f"#{wid}: {item} {status} (–¥–æ–±–∞–≤–ª–µ–Ω–æ {created_at})\n"
    await update.message.reply_text(msg)

async def add_wish_command(update, context):
    user_id = update.effective_user.id
    if not context.args:
        await update.message.reply_text("–§–æ—Ä–º–∞—Ç: /add_wish <–∂–µ–ª–∞–Ω–∏–µ>")
        return
    item = " ".join(context.args)
    db.add_wish(user_id, item, datetime.now().isoformat())
    await update.message.reply_text(f"–ñ–µ–ª–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {item}")

async def done_wish_command(update, context):
    user_id = update.effective_user.id
    if not context.args or not context.args[0].isdigit():
        await update.message.reply_text("–§–æ—Ä–º–∞—Ç: /done_wish <id –∂–µ–ª–∞–Ω–∏—è>")
        return
    wish_id = int(context.args[0])
    db.mark_wish_done(user_id, wish_id, done=True)
    await update.message.reply_text(f"–ñ–µ–ª–∞–Ω–∏–µ #{wish_id} –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ!")

async def remove_wish_command(update, context):
    user_id = update.effective_user.id
    if not context.args or not context.args[0].isdigit():
        await update.message.reply_text("–§–æ—Ä–º–∞—Ç: /remove_wish <id –∂–µ–ª–∞–Ω–∏—è>")
        return
    wish_id = int(context.args[0])
    db.remove_wish(user_id, wish_id)
    await update.message.reply_text(f"–ñ–µ–ª–∞–Ω–∏–µ #{wish_id} —É–¥–∞–ª–µ–Ω–æ.")

async def postcard_command(update, context):
    if not context.args:
        await update.message.reply_text("–§–æ—Ä–º–∞—Ç: /postcard <–æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–∫–∏>")
        return
    prompt = " ".join(context.args)
    await update.message.reply_text("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–∫—Ä—ã—Ç–∫—É... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 1 –º–∏–Ω—É—Ç—ã.")
    try:
        print("[DEBUG] –ü–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º generate_postcard")
        image_bytes = await generate_postcard(prompt)
        print(f"[DEBUG] –ü–æ—Å–ª–µ generate_postcard, image_bytes: {image_bytes}")
        print("[DEBUG] –ü–æ—Å–ª–µ generate_postcard, –ø–µ—Ä–µ–¥ reply_photo")
        await update.message.reply_photo(image_bytes, caption=f"–û—Ç–∫—Ä—ã—Ç–∫–∞: {prompt}")
        print("[DEBUG] –ü–æ—Å–ª–µ reply_photo")
    except Exception as e:
        print(f"[DEBUG] –í except postcard_command: {e}")
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–∫–∏: {e}")

async def toggle_ollama_mode_handler(update, context):
    mode, submode = get_ollama_mode(context)
    new_mode = "couple" if mode == "general" else "general"
    set_ollama_mode(context, new_mode)
    await update.message.reply_text(f"–†–µ–∂–∏–º –ø–µ—Ä–µ–∫–ª—é—á—ë–Ω: {get_mode_button_text(new_mode)}")
    await send_welcome(update, context)

def get_start_conv_handler():
    return ConversationHandler(
        entry_points=[CommandHandler("start", start_command)],
        states={
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_name)],
        },
        fallbacks=[CommandHandler("cancel", cancel_start)],
        allow_reentry=True
    ) 